"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1853],{6033:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=a(4848),r=a(8453);const i={sidebar_position:2,title:"Search Data Store"},s=void 0,o={id:"datastores/search-datastore",title:"Search Data Store",description:"Overview",source:"@site/docs/datastores/search-datastore.md",sourceDirName:"datastores",slug:"/datastores/search-datastore",permalink:"/docs/datastores/search-datastore",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/datastores/search-datastore.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Search Data Store"},sidebar:"tutorialSidebar",previous:{title:"Data Stores",permalink:"/docs/datastores/"},next:{title:"Logging & Audit",permalink:"/docs/audit"}},l={},d=[{value:"Overview",id:"overview",level:2},{value:"Requirements",id:"requirements",level:3},{value:"Usage",id:"usage",level:3},{value:"Annotating Entity",id:"annotating-entity",level:4},{value:"(Optional) Defining a Custom Analyzer",id:"optional-defining-a-custom-analyzer",level:4},{value:"Wrapping DataStore",id:"wrapping-datastore",level:4},{value:"Indexing Data",id:"indexing-data",level:4},{value:"Caveats",id:"caveats",level:3},{value:"Data Type Support",id:"data-type-support",level:4},{value:"Filter Operators",id:"filter-operators",level:4},{value:"Analyzer Assumptions",id:"analyzer-assumptions",level:4},{value:"Index Analysis",id:"index-analysis",level:5},{value:"Search Term Analysis",id:"search-term-analysis",level:5},{value:"Sorting and Pagination",id:"sorting-and-pagination",level:5}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"Search Data Store provides full text search for Elide."}),"\n",(0,t.jsx)(n.h3,{id:"requirements",children:"Requirements"}),"\n",(0,t.jsxs)(n.p,{children:["This store leverages ",(0,t.jsx)(n.a,{href:"https://hibernate.org/search/",children:"Hibernate Search"})," which requires Hibernate 6+."]}),"\n",(0,t.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"SearchDataStore"})," wraps another fully featured store and supports full text search on fields that are indexed using\nHibernate Search. If the query cannot be answered by the ",(0,t.jsx)(n.code,{children:"SearchDataStore"}),", it delegates the query to the underlying\n(wrapped) data store."]}),"\n",(0,t.jsx)(n.h4,{id:"annotating-entity",children:"Annotating Entity"}),"\n",(0,t.jsxs)(n.p,{children:["Use Hibernate Search annotations to describe how your entities are indexed and stored in Lucene or Elasticsearch. Some\nof the annotations (like ",(0,t.jsx)(n.code,{children:"AnalyzerDef"}),") can be defined once at the package level if desired."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Entity\n@Include\n@Indexed\n@Data // Lombok\npublic class Item {\n\n    @Id\n    private long id;\n\n    @FullTextField(\n            name = "name",\n            searchable = Searchable.YES,\n            projectable = Projectable.NO,\n            analyzer = "case_insensitive"\n    )\n    @KeywordField(name = "sortName", sortable = Sortable.YES, projectable = Projectable.NO, searchable = Searchable.YES)\n    private String name;\n\n    @FullTextField(searchable = Searchable.YES, projectable = Projectable.NO, analyzer = "case_insensitive")\n    private String description;\n\n    @GenericField(searchable = Searchable.YES, projectable = Projectable.NO, sortable = Sortable.YES)\n    private Date modifiedDate;\n\n    private BigDecimal price;\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"optional-defining-a-custom-analyzer",children:"(Optional) Defining a Custom Analyzer"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Item"})," entity above references a non-standard analyzer - ",(0,t.jsx)(n.code,{children:"case_insensitive"}),".  This analyzer needs to be\nprogrammatically created:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'public class MyLuceneAnalysisConfigurer implements LuceneAnalysisConfigurer {\n\n    @Override\n    public void configure(LuceneAnalysisConfigurationContext ctx) {\n        ctx.analyzer("case_insensitive")\n                .custom()\n                .tokenizer(NGramTokenizerFactory.class)\n                .param("minGramSize", "3")\n                .param("maxGramSize", "50")\n                .tokenFilter(LowerCaseFilterFactory.class);\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["and then configured by setting the property ",(0,t.jsx)(n.code,{children:"hibernate.search.backend.analysis.configurer"})," to the new analyzer."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<persistence xmlns="http://java.sun.com/xml/ns/persistence"\n             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"\n             version="2.0">\n    <persistence-unit name="searchDataStoreTest">\n        <class>com.paiondata.elide.datastores.search.models.Item</class>\n\n        <properties>\n            <property name="hibernate.search.backend.analysis.configurer" value="class:com.paiondata.elide.datastores.search.MyLuceneAnalysisConfigurer"/>\n            <property name="hibernate.search.backend.directory.type" value="local-heap"/>\n            ...\n        </properties>\n    </persistence-unit>\n</persistence>\n'})}),"\n",(0,t.jsx)(n.h4,{id:"wrapping-datastore",children:"Wrapping DataStore"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"/* Create your JPA data store */\nDataStore store = ...\n\n/* Wrap it with a SearchDataStore */\nEntityManagerFactory emf = ...\n\nboolean indexOnStartup = true; //Create a fresh index when the server starts\nsearchStore = new SearchDataStore(store, emf, indexOnStartup);\n\n/* Configure Elide with your store */\nElideSettings = new ElideSettingsBuidler(searchStore).build();\n"})}),"\n",(0,t.jsx)(n.h4,{id:"indexing-data",children:"Indexing Data"}),"\n",(0,t.jsx)(n.p,{children:"We can index data either by:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["When the ",(0,t.jsx)(n.code,{children:"SearchDataStore"})," is initialized, indicate (by setting ",(0,t.jsx)(n.code,{children:"indexOnStartup"})," to ",(0,t.jsx)(n.code,{children:"true"}),") that the search store\nshould build a complete index."]}),"\n",(0,t.jsx)(n.li,{children:"Issuing created, updated, and delete requests against our Elide service."}),"\n",(0,t.jsx)(n.li,{children:"Using an out of band process using Hibernate Search APIs."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"caveats",children:"Caveats"}),"\n",(0,t.jsx)(n.h4,{id:"data-type-support",children:"Data Type Support"}),"\n",(0,t.jsx)(n.p,{children:"Only text fields (String) are supported/tested. Other data types (dates, numbers, etc) have not been tested. Embedded\nindex support has not been implemented."}),"\n",(0,t.jsx)(n.h4,{id:"filter-operators",children:"Filter Operators"}),"\n",(0,t.jsx)(n.p,{children:"Only INFIX, and PREFIX filter operators (and their case insensitive equivalents) are supported.  Note that hibernate\nsearch only indexes and analyzes fields as either case sensitive or not case-sensitive - so a given field will only\nsupport the INFIX/PREFIX filter operator that matches how the field was indexed."}),"\n",(0,t.jsx)(n.p,{children:"All other filter operators are passed to the underlying wrapped JPA store."}),"\n",(0,t.jsx)(n.h4,{id:"analyzer-assumptions",children:"Analyzer Assumptions"}),"\n",(0,t.jsx)(n.h5,{id:"index-analysis",children:"Index Analysis"}),"\n",(0,t.jsx)(n.p,{children:"To implement correct behavior for Elide's INFIX and PREFIX operators, the search store assumes an ngram (non-edge)\ntokenizer is used. This allows white spaces and punctuation to be included in the index."}),"\n",(0,t.jsx)(n.p,{children:"If the client provides a filter predicate with a term which is smaller or larger than the min/max ngram sizes\nrespectively, it will not be found in the index."}),"\n",(0,t.jsxs)(n.p,{children:["The search store can be configured to return a 400 error to the client in those scenarios by passing the minimum and\nmaximum ngram size to the constructor of the ",(0,t.jsx)(n.code,{children:"SearchDataStore"}),".  The sizes are global and apply to all Elide entities\nmanaged by the store instance:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"new SearchDataStore(jpaStore, emf, true, 3, 50);\n"})}),"\n",(0,t.jsx)(n.h5,{id:"search-term-analysis",children:"Search Term Analysis"}),"\n",(0,t.jsxs)(n.p,{children:["Elide creates a Hibernate Search ",(0,t.jsx)(n.code,{children:"SimpleQueryString"})," for each predicate.  It first escapes white space and punctuation\nin any user provided input (to match Elide's default behavior when not using the ",(0,t.jsx)(n.code,{children:"SearchDataStore"}),").  The resulting\nsingle token is used to construct a prefix query."]}),"\n",(0,t.jsx)(n.h5,{id:"sorting-and-pagination",children:"Sorting and Pagination"}),"\n",(0,t.jsx)(n.p,{children:"When using the INFIX operator, sorting and pagination are pushed to down Lucene/ElasticSearch. When using the PREFIX\noperator, they are performed in-memory in the Elide service."}),"\n",(0,t.jsx)(n.p,{children:"Elide constructs a Prefix query, which together with an ngram index fully implements the INFIX operator.  However, the\nngram analyzer adds ngrams to the index that do not start on word boundaries.  For the prefix operator, the search\nstore first performs the lucene filter and then filters again in-memory to return the correct set of matching terms."}),"\n",(0,t.jsx)(n.p,{children:"In this instance, because filtering is performed partially in memory, Elide also sorts and paginates in memory as well."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>o});var t=a(6540);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);